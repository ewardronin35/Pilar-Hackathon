<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pilar-eLearn</title>
    <link rel="icon" href="images/pilarLogo.ico" type="image/x-icon">
    <link rel="shortcut icon" href="images/pilarLogo.ico" type="image/x-icon">
        
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #7209b7;
            --secondary: #3a0ca3;
            --accent: #4cc9f0;
            --success: #4ade80;
            --warning: #f9c74f;
            --danger: #ef476f;
            --light: #f8f9fa;
            --dark: #212529;
            --bg: #0f172a;
            --card-bg: #1e293b;
            --text: #f8fafc;
            /* Light Mode - Modern Blue Gradient & White Theme */
            --bg-light: #f8fafc;
            --text-light: #1e3a8a;
            --card-bg-light: #ffffff;
            --primary-light: #2563eb;
            --secondary-light: #60a5fa;
            --accent-light: #93c5fd;
            --gradient-light-1: #2563eb;
            --gradient-light-2: #60a5fa;
            --gradient-light-3: #93c5fd;
            
            /* Dark Mode Variables (existing dark mode) */
            --bg-dark: #0f172a;
            --text-dark: #f8fafc;
            --card-bg-dark: #1e293b;
            --primary-dark: #7209b7;
        }
  /* Theme Toggle Styles */
  .theme-toggle {
        background: none;
        border: none;
        color: var(--text);
        font-size: 1.5rem;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

    .theme-toggle:hover {
        transform: rotate(180deg);
    }

    /* Light Mode Styles */
    body.light-mode {
        background: linear-gradient(135deg, var(--bg-light), var(--accent-light) 300%);
        color: var(--text-light);
    }

    body.light-mode .subject-card,
    body.light-mode .achievements-section,
    body.light-mode .activity-feed {
        background-color: var(--card-bg-light);
        color: var(--text-light);
        box-shadow: 0 4px 15px rgba(37, 99, 235, 0.1);
        border: 1px solid rgba(191, 219, 254, 0.3);
    }

    body.light-mode .header-content {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    body.light-mode header {
        background-color: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 20px rgba(37, 99, 235, 0.15);
    }

    body.light-mode .stats-overview,
    body.light-mode .progress-bar,
    body.light-mode .modal {
        background-color: var(--card-bg-light);
        border: 1px solid rgba(191, 219, 254, 0.3);
    }

    body.light-mode .quest-status,
    body.light-mode .stat,
    body.light-mode .user-profile {
        background-color: rgba(37, 99, 235, 0.1);
        color: var(--text-light);
    }

    body.light-mode .logo i,
    body.light-mode .welcome-message::after {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2));
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    body.light-mode .welcome-message::after {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
    }

    body.light-mode .btn-primary,
    body.light-mode .modal-btn.btn-primary {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    body.light-mode .progress-fill {
        background: linear-gradient(90deg, var(--gradient-light-2), var(--gradient-light-1));
    }

    body.light-mode .avatar {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2));
    }

    body.light-mode .stat i {
        color: var(--gradient-light-1);
    }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--bg);
            color: var(--text);
            line-height: 1.6;
            transition: all 0.3s ease;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Gamified Header */
        header {
            background-color: rgba(30, 41, 59, 0.8);
            backdrop-filter: blur(10px);
            padding: 15px 0;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 100;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--accent);
        }

        .logo i {
            background: linear-gradient(135deg, var(--primary), var(--accent));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-size: 2rem;
        }

        .user-stats {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .stat {
            display: flex;
            align-items: center;
            gap: 8px;
            background-color: rgba(0, 0, 0, 0.2);
            padding: 8px 12px;
            border-radius: 20px;
        }

        .stat i {
            color: var(--accent);
        }

        .stat-value {
            font-weight: 600;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
            background-color: rgba(0, 0, 0, 0.2);
            padding: 5px 15px 5px 5px;
            border-radius: 30px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .user-profile:hover {
            background-color: rgba(0, 0, 0, 0.4);
        }

        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.2rem;
            color: white;
        }

        .user-name {
            font-weight: 600;
        }

        .user-level {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        /* Main Content */
        main {
            padding-top: 100px;
            min-height: 100vh;
        }

        .dashboard-header {
            margin-bottom: 30px;
        }

        .welcome-message {
            font-size: 2rem;
            margin-bottom: 10px;
            position: relative;
            display: inline-block;
        }

        .welcome-message::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, var(--accent), transparent);
            border-radius: 2px;
        }

        .sub-message {
            opacity: 0.8;
        }

        /* Quest Board */
        .quest-board {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .subject-card {
            background-color: var(--card-bg);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            position: relative;
            z-index: 1;
        }

        .subject-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }

        .subject-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(114, 9, 183, 0.2), rgba(76, 201, 240, 0.2));
            z-index: -1;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .subject-card:hover::before {
            opacity: 1;
        }

        .card-header {
            padding: 20px;
            background-size: cover;
            background-position: center;
            height: 100px;
            display: flex;
            align-items: flex-end;
            position: relative;
        }

        .card-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to top, var(--card-bg), transparent);
        }

        .english-bg {
            background: linear-gradient(135deg, #4cc9f0, #3a86ff);
        }

        .filipino-bg {
            background: linear-gradient(135deg, #f72585, #b5179e);
        }

        .science-bg {
            background: linear-gradient(135deg, #4ade80, #2dd4bf);
        }

        .math-bg {
            background: linear-gradient(135deg, #fb923c, #f97316);

        }

        .subject-title {
            font-size: 1.5rem;
            font-weight: 700;
            position: relative;
            z-index: 1;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .subject-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .english-icon {
            background: linear-gradient(135deg, #4cc9f0, #3a86ff);
        }

        .filipino-icon {
            background: linear-gradient(135deg, #f72585, #b5179e);
        }

        .science-icon {
            background: linear-gradient(135deg, #4ade80, #2dd4bf);
        }

        .math-icon {
            background: linear-gradient(135deg, #fb923c, #f97316);
        }

        .card-content {
            padding: 20px;
        }

        .quest-progress {
            margin-top: 15px;
        }

        .progress-info {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }

        .progress-bar {
            height: 8px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            border-radius: 4px;
            transition: width 1s ease;
        }

        .english-progress {
            background: linear-gradient(90deg, #4cc9f0, #3a86ff);
        }

        .filipino-progress {
            background: linear-gradient(90deg, #f72585, #b5179e);
        }

        .science-progress {
            background: linear-gradient(90deg, #4ade80, #2dd4bf);
        }

        .math-progress {
            background: linear-gradient(90deg, #fb923c, #f97316);
        }

        .rewards-info {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
            font-size: 0.9rem;
        }

        .rewards {
            display: flex;
            gap: 5px;
        }

        .reward-item {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .reward-item i {
            color: var(--warning);
        }

        .quest-status {
            background-color: rgba(79, 70, 229, 0.2);
            padding: 4px 8px;
            border-radius: 10px;
            font-size: 0.8rem;
            color: var(--accent);
        }

        .quest-button {
            display: block;
            width: 100%;
            padding: 12px;
            margin-top: 20px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            text-decoration: none;
        }

        .quest-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(114, 9, 183, 0.4);
        }

        /* Achievements Section */
        .achievements-section {
            background-color: var(--card-bg);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            margin-bottom: 40px;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-title i {
            color: var(--warning);
        }

        .view-all {
            color: var(--accent);
            display: flex;
            align-items: center;
            gap: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .view-all:hover {
            opacity: 0.8;
        }

        .achievements-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));
            gap: 15px;
        }

        .achievement {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            padding: 15px 10px;
            background-color: rgba(0, 0, 0, 0.2);
            border-radius: 12px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .achievement:hover {
            transform: translateY(-5px);
            background-color: rgba(0, 0, 0, 0.3);
        }

        .achievement-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            font-size: 1.2rem;
            color: white;
        }

        .achievement-name {
            font-size: 0.8rem;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .achievement-progress {
            font-size: 0.7rem;
            opacity: 0.8;
        }

        /* Activity Feed */
        .activity-feed {
            background-color: var(--card-bg);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .activity-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .activity-item {
            display: flex;
            gap: 15px;
            padding: 15px;
            background-color: rgba(0, 0, 0, 0.2);
            border-radius: 12px;
            transition: all 0.3s ease;
        }

        .activity-item:hover {
            background-color: rgba(0, 0, 0, 0.3);
        }

        .activity-icon {
            width: 45px;
            height: 45px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .english-activity {
            background: linear-gradient(135deg, #4cc9f0, #3a86ff);
        }

        .filipino-activity {
            background: linear-gradient(135deg, #f72585, #b5179e);
        }

        .science-activity {
            background: linear-gradient(135deg, #4ade80, #2dd4bf);
        }

        .math-activity {
            background: linear-gradient(135deg, #fb923c, #f97316);
        }

        .activity-content {
            flex-grow: 1;
        }

        .activity-title {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .activity-details {
            display: flex;
            justify-content: space-between;
            font-size: 0.8rem;
            opacity: 0.8;
        }

        .activity-rewards {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .xp-reward, .coin-reward {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .xp-reward i {
            color: var(--accent);
        }

        .coin-reward i {
            color: var(--warning);
        }

        /* Welcome Modal */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            padding: 20px;
            overflow-y: auto;
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal {
    background-color: var(--card-bg);
    border-radius: 20px;
    width: 90%;
    max-width: 500px;
    max-height: 90vh; /* Limit height */
    overflow-y: auto; /* Enable scrolling */
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
    transform: translateY(20px);
    transition: all 0.3s ease;
    position: relative;
}
.modal-content {
    padding: 25px;
    max-height: 60vh; /* Limit content height */
    overflow-y: auto; /* Enable scrolling */
}
@media (max-width: 600px) {
    .modal {
        width: 95%;
        margin: 20px auto;
    }

    .modal-content {
        padding: 15px;
    }

    .avatar-selection {
        justify-content: center;
        gap: 10px;
    }

    .avatar-option {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
    }
}
        .modal-overlay.active .modal {
            transform: translateY(0);
        }

        .modal-header {
            padding: 20px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            position: relative;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .modal-subtitle {
            opacity: 0.9;
        }

        .modal-content {
            padding: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            background-color: rgba(0, 0, 0, 0.2);
            color: var(--text);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(114, 9, 183, 0.2);
        }

        .avatar-selection {
            display: flex;
            gap: 15px;
            margin-top: 15px;
            flex-wrap: wrap;
            justify-content: center;
        }

        .avatar-option {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 3px solid transparent;
        }

        .avatar-option:hover, .avatar-option.selected {
            transform: scale(1.1);
            border-color: var(--accent);
        }

        .avatar-1 {
            background: linear-gradient(135deg, #4cc9f0, #3a86ff);
        }

        .avatar-2 {
            background: linear-gradient(135deg, #f72585, #b5179e);
        }

        .avatar-3 {
            background: linear-gradient(135deg, #4ade80, #2dd4bf);
        }

        .avatar-4 {
            background: linear-gradient(135deg, #fb923c, #f97316);
        }

        .accessibility-options {
            margin-top: 25px;
            background-color: rgba(0, 0, 0, 0.15);
            padding: 15px;
            border-radius: 10px;
        }

        .option-title {
            font-weight: 600;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .option-title i {
            color: var(--accent);
        }

        .checkbox-group {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 10px;
            margin-top: 10px;
        }

        .checkbox-option {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            padding: 8px 12px;
            border-radius: 8px;
        }

        .checkbox-option:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }

        .checkbox-input {
            appearance: none;
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 5px;
            background-color: rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            position: relative;
            transition: all 0.3s ease;
        }

        .checkbox-input:checked {
            background-color: var(--primary);
            border-color: var(--primary);
        }

        .checkbox-input:checked::after {
            content: '\f00c';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            color: white;
            font-size: 0.8rem;
        }

        .checkbox-label {
            font-size: 0.95rem;
        }

        .modal-footer {
            padding: 20px;
            display: flex;
            justify-content: space-between;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .modal-btn {
            padding: 12px 25px;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.95rem;
        }

        .btn-secondary {
            background-color: rgba(255, 255, 255, 0.1);
            color: var(--text);
            border: none;
        }

        .btn-secondary:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding-right: 35px;
            position: relative;
        }

        .btn-primary::after {
            content: '\f054';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            transition: transform 0.3s ease;
        }

        .btn-primary:hover {
            box-shadow: 0 5px 15px rgba(114, 9, 183, 0.4);
        }

        .btn-primary:hover::after {
            transform: translate(5px, -50%);
        }

        /* Accessibility Styles */
        body.dyslexia-friendly {
            font-family: 'OpenDyslexic', 'Comic Sans MS', cursive;
            letter-spacing: 0.05em;
            word-spacing: 0.1em;
            line-height: 1.8;
        }

        body.high-contrast {
            --bg: #000;
            --card-bg: #111;
            --text: #fff;
        }

        body.color-blind-friendly .english-icon,
        body.color-blind-friendly .english-progress,
        body.color-blind-friendly .english-activity {
            background: linear-gradient(135deg, #ffbe0b, #fb5607);
        }

        body.color-blind-friendly .filipino-icon,
        body.color-blind-friendly .filipino-progress,
        body.color-blind-friendly .filipino-activity {
            background: linear-gradient(135deg, #ff006e, #8338ec);
        }

        body.color-blind-friendly .science-icon,
        body.color-blind-friendly .science-progress,
        body.color-blind-friendly .science-activity {
            background: linear-gradient(135deg, #3a86ff, #0096c7);
        }

        body.color-blind-friendly .math-icon,
        body.color-blind-friendly .math-progress,
        body.color-blind-friendly .math-activity {
            background: linear-gradient(135deg, #06d6a0, #1b9aaa);
        }

        /* Focus Mode for ADHD */
        body.focus-mode .subject-card:not(:hover),
        body.focus-mode .achievement:not(:hover),
        body.focus-mode .activity-item:not(:hover) {
            opacity: 0.6;
            filter: grayscale(50%);
        }

        body.focus-mode .subject-card:hover,
        body.focus-mode .achievement:hover,
        body.focus-mode .activity-item:hover {
            opacity: 1;
            filter: grayscale(0%);
            transform: scale(1.02);
            box-shadow: 0 0 0 3px var(--accent);
        }

        /* Animations */
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        .float {
            animation: float 4s ease-in-out infinite;
        }

        /* Responsiveness */
        @media (max-width: 768px) {
            .user-stats {
                display: none;
            }

            .welcome-message {
                font-size: 1.5rem;
            }

            .achievement-grid {
                grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
            }
        }

        /* Loader for Slow Connection */
        .loader-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background-color: rgba(255, 255, 255, 0.1);
            z-index: 101;
            display: none;
        }

        .loader {
            height: 100%;
            width: 0%;
            background: linear-gradient(90deg, var(--primary), var(--accent));
        }

        body.slow-connection .loader-overlay {
            display: block;
        }

        /* Chatbot Styles */
        #chatbotContainer {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1001; /* Above header */
        }

        #chatbotToggle {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            font-size: 1.8rem;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #chatbotToggle:hover {
            transform: scale(1.1);
            box-shadow: 0 8px 20px rgba(114, 9, 183, 0.5);
        }

        #chatbotWindow {
            position: absolute;
            bottom: 80px; /* Above the toggle button */
            right: 0;
            width: 350px;
            max-height: 450px;
            background-color: var(--card-bg);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
            display: flex;
            flex-direction: column;
            overflow: hidden;
            transition: all 0.3s ease;
            transform-origin: bottom right;
        }

        #chatbotWindow.hidden {
            transform: scale(0);
            opacity: 0;
            visibility: hidden;
        }

        .chatbot-header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 12px 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 600;
        }

        #chatbotClose {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            opacity: 0.8;
            transition: opacity 0.3s ease;
        }

        #chatbotClose:hover {
            opacity: 1;
        }

        .chatbot-messages {
            flex-grow: 1;
            padding: 15px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .message {
            padding: 10px 15px;
            border-radius: 10px;
            max-width: 80%;
            word-wrap: break-word;
        }

        .bot-message {
            background-color: rgba(76, 201, 240, 0.2); /* Accent color lightened */
            color: var(--accent);
            align-self: flex-start;
            border-bottom-left-radius: 0;
        }

        .user-message {
            background-color: rgba(255, 255, 255, 0.1);
            color: var(--text);
            align-self: flex-end;
            border-bottom-right-radius: 0;
        }

        .chatbot-suggestions {
            padding: 10px 15px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            max-height: 100px; /* Limit suggestion height */
            overflow-y: auto;
        }

        .suggestion-btn {
            background-color: rgba(76, 201, 240, 0.3); /* Accent */
            border: 1px solid var(--accent);
            color: var(--accent);
            padding: 6px 12px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.3s ease;
        }

        .suggestion-btn:hover {
            background-color: var(--accent);
            color: var(--card-bg);
        }
        /* Accessibility Dropdown Styles */
.accessibility-dropdown {
    position: relative;
    margin-left: 15px;
}

.accessibility-toggle {
    background: none;
    border: none;
    color: var(--text);
    font-size: 1.5rem;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.accessibility-toggle:hover {
    transform: rotate(15deg);
}

.accessibility-menu {
    position: absolute;
    top: 100%;
    right: 0;
    width: 300px;
    background-color: var(--card-bg);
    border-radius: 10px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    padding: 15px;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
}

.accessibility-menu.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.accessibility-option {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 10px;
    border-radius: 8px;
    transition: background-color 0.3s ease;
    cursor: pointer;
}

.accessibility-option:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.accessibility-checkbox {
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid var(--accent);
    border-radius: 4px;
    outline: none;
    cursor: pointer;
    position: relative;
}

.accessibility-checkbox:checked {
    background-color: var(--accent);
}

.accessibility-checkbox:checked::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
}

.accessibility-option label {
    display: flex;
    flex-direction: column;
    gap: 5px;
    flex-grow: 1;
    cursor: pointer;
}

.accessibility-option i {
    color: var(--accent);
    font-size: 1.2rem;
}

.accessibility-option small {
    font-size: 0.7rem;
    opacity: 0.7;
}

/* Accessibility Feature Styles */
body.dyslexia-friendly {
    font-family: 'OpenDyslexic', 'Arial', sans-serif;
    line-height: 1.5;
    letter-spacing: 0.05em;
}

body.high-contrast {
    filter: contrast(1.5);
    background-color: #000;
    color: #fff;
}

body.focus-mode .subject-card:not(:hover) {
    opacity: 0.6;
    filter: grayscale(50%);
}

body.color-blind-friendly {
    /* Add color-blind friendly color modifications */
    filter: saturate(0.7) hue-rotate(45deg);
}
.language-selector {
    margin-left: 15px;
}

.language-selector select {
    background-color: var(--card-bg);
    color: var(--text);
    border: 1px solid var(--accent);
    padding: 5px 10px;
    border-radius: 5px;
}

    body.light-mode .stat i {
        color: var(--gradient-light-1);
    }

    /* Chatbot light mode styling */
    body.light-mode #chatbotToggle {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
        box-shadow: 0 4px 15px rgba(37, 99, 235, 0.2);
    }

    body.light-mode #chatbotWindow {
        background-color: var(--card-bg-light);
        box-shadow: 0 4px 20px rgba(37, 99, 235, 0.15);
        border: 1px solid rgba(191, 219, 254, 0.3);
        color: var(--text-light);
    }

    body.light-mode .chatbot-header {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    body.light-mode .bot-message {
        background-color: rgba(37, 99, 235, 0.1);
        color: var(--text-light);
    }

    body.light-mode .user-message {
        background-color: rgba(37, 99, 235, 0.2);
        color: var(--text-light);
    }

    body.light-mode .chatbot-suggestions button {
        background-color: rgba(37, 99, 235, 0.1);
        color: var(--gradient-light-1);
        border: 1px solid rgba(191, 219, 254, 0.5);
    }

    body.light-mode .chatbot-suggestions button:hover {
        background-color: rgba(37, 99, 235, 0.2);
    }

    body.light-mode .chatbot-suggestions button:hover {
        background-color: rgba(37, 99, 235, 0.2);
    }

    /* Additional light mode styling for inputs and UI elements */
    body.light-mode input, 
    body.light-mode select, 
    body.light-mode textarea {
        background-color: #ffffff;
        border: 1px solid rgba(191, 219, 254, 0.5);
        color: var(--text-light);
    }

    body.light-mode input:focus, 
    body.light-mode select:focus, 
    body.light-mode textarea:focus {
        border-color: var(--gradient-light-1);
        box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
    }

    body.light-mode button,
    body.light-mode .btn {
        border: 1px solid rgba(191, 219, 254, 0.3);
    }

    body.light-mode .btn-secondary {
        background-color: #f1f5f9;
        color: var(--text-light);
    }

    body.light-mode .btn-secondary:hover {
        background-color: #e2e8f0;
    }

    body.light-mode .sidebar-nav a {
        color: var(--text-light);
    }

    body.light-mode .sidebar-nav a:hover,
    body.light-mode .sidebar-nav a.active {
        background-color: rgba(37, 99, 235, 0.1);
        color: var(--gradient-light-1);
    }

    body.light-mode #gradeSelector {
        background-color: rgba(37, 99, 235, 0.1);
        border: 1px solid rgba(191, 219, 254, 0.5);
        color: var(--text-light);
    }

    body.light-mode .modal-header {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    /* Override all specific gradients in light mode */
    body.light-mode .logo i {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2));
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    /* Subject cards & activity specific gradients */
    body.light-mode .english-bg,
    body.light-mode .english-icon,
    body.light-mode .activity-item.english-activity .icon,
    body.light-mode .achievement-card.english {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
    }

    body.light-mode .filipino-bg,
    body.light-mode .filipino-icon,
    body.light-mode .activity-item.filipino-activity .icon,
    body.light-mode .achievement-card.filipino {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-3)) !important;
        color: white !important;
    }

    body.light-mode .science-bg,
    body.light-mode .science-icon,
    body.light-mode .activity-item.science-activity .icon,
    body.light-mode .achievement-card.science {
        background: linear-gradient(135deg, var(--gradient-light-2), var(--gradient-light-1)) !important;
        color: white !important;
    }

    body.light-mode .math-bg,
    body.light-mode .math-icon,
    body.light-mode .activity-item.math-activity .icon,
    body.light-mode .achievement-card.math {
        background: linear-gradient(135deg, var(--gradient-light-3), var(--gradient-light-2)) !important;
        color: white !important;
    }

    /* Progress bars */
    body.light-mode .english-progress .progress-fill {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
    }

    body.light-mode .filipino-progress .progress-fill {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-3)) !important;
    }

    body.light-mode .science-progress .progress-fill {
        background: linear-gradient(90deg, var(--gradient-light-2), var(--gradient-light-1)) !important;
    }

    body.light-mode .math-progress .progress-fill {
        background: linear-gradient(90deg, var(--gradient-light-3), var(--gradient-light-2)) !important;
    }

    /* Badges */
    body.light-mode .badge {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
    }

    /* Avatars and user profile elements */
    body.light-mode .avatar,
    body.light-mode .reward-badge,
    body.light-mode .streak-badge {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
    }

    /* Buttons and interactive elements */
    body.light-mode .btn-primary,
    body.light-mode .modal-btn.btn-primary,
    body.light-mode .take-course-btn,
    body.light-mode .action-btn,
    body.light-mode .reward-btn {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
        border: none !important;
    }

    /* Welcome message underline */
    body.light-mode .welcome-message::after {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
    }

    /* Card overlay gradients */
    body.light-mode .subject-card::before,
    body.light-mode .quest-card::before {
        background: linear-gradient(135deg, rgba(37, 99, 235, 0.1), rgba(147, 197, 253, 0.1)) !important;
    }

    /* Ensure all gradient backgrounds have white text for proper contrast */
    body.light-mode [style*="linear-gradient"] {
        color: white !important;
    }

    /* Specific fixes for interactive elements and color consistency */
    body.light-mode .badges-container .badge,
    body.light-mode .achievement-badges .badge {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
    }

    /* Badge-specific colors for better light mode visibility */
    body.light-mode .badge-beginner {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-3)) !important;
    }
    
    body.light-mode .badge-intermediate {
        background: linear-gradient(135deg, var(--gradient-light-2), var(--gradient-light-1)) !important;
    }
    
    body.light-mode .badge-advanced {
        background: linear-gradient(135deg, var(--gradient-light-3), var(--gradient-light-2)) !important;
    }

    /* Fix headers and icons */
    body.light-mode .section-header i,
    body.light-mode .modal-title i {
        color: var(--gradient-light-1) !important;
    }

    /* Subject specific name colors when on gradients */
    body.light-mode .subject-card .subject-name {
        color: white !important;
    }

    /* Any unlock buttons or disabled buttons */
    body.light-mode [style*="#6c757d"],
    body.light-mode [style*="#495057"] {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        opacity: 0.7;
    }

    /* Dropdown menus and select elements */
    body.light-mode .dropdown-menu,
    body.light-mode select.form-select {
        background-color: white;
        border: 1px solid rgba(37, 99, 235, 0.2);
        color: var(--text-light);
    }

    body.light-mode .dropdown-item:hover,
    body.light-mode select.form-select option:hover {
        background-color: rgba(37, 99, 235, 0.1);
    }
    
    /* Additional fixes for any remaining elements */
    body.light-mode .notification-badge {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
    }

    /* Fix activity feed items */
    body.light-mode .activity-feed .activity-item {
        border-left: 3px solid var(--gradient-light-1);
    }

    /* Adjust stats cards */
    body.light-mode .stats-card {
        background-color: white;
        border: 1px solid rgba(191, 219, 254, 0.3);
        box-shadow: 0 4px 15px rgba(37, 99, 235, 0.1);
    }

    body.light-mode .stats-card .icon {
        background: linear-gradient(135deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    /* Adjust modal styling for better contrast */
    body.light-mode .modal {
        background-color: white;
        box-shadow: 0 10px 25px rgba(37, 99, 235, 0.15);
    }

    /* Ensure consistent links */
    body.light-mode a:not(.btn):not(.modal-btn) {
        color: var(--gradient-light-1);
    }

    /* Fix any other buttons */
    body.light-mode button:not(.btn-secondary):not(.close-modal):not(.theme-toggle) {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    /* Consistent shadows for hover effects */
    body.light-mode .subject-card:hover,
    body.light-mode .achievement-card:hover,
    body.light-mode .badge:hover {
        box-shadow: 0 10px 25px rgba(37, 99, 235, 0.2) !important;
    }

    /* Card headers and footers */
    body.light-mode .card-header,
    body.light-mode .modal-header {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        color: white;
    }

    /* Fix tooltips and popups */
    body.light-mode .tooltip,
    body.light-mode .popover {
        background-color: white;
        border: 1px solid rgba(191, 219, 254, 0.5);
        color: var(--text-light);
    }

    /* Fix scrollbars */
    body.light-mode ::-webkit-scrollbar-thumb {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2));
        border-radius: 10px;
    }

    body.light-mode ::-webkit-scrollbar-track {
        background: rgba(191, 219, 254, 0.2);
    }
    
    /* Fix the continue bar button in light mode */
    body.light-mode .quest-button {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
        color: white !important;
        border: none !important;
        box-shadow: 0 4px 15px rgba(37, 99, 235, 0.15);
    }
    
    body.light-mode .quest-button:hover {
        box-shadow: 0 6px 20px rgba(37, 99, 235, 0.25) !important;
        transform: translateY(-2px);
    }
    
    /* Fix navigation links */
    body.light-mode .nav-link,
    body.light-mode nav a,
    body.light-mode header .user-profile span,
    body.light-mode .user-name,
    body.light-mode .logo {
        color: white !important;
    }
    
    body.light-mode header {
        background: linear-gradient(90deg, var(--gradient-light-1), var(--gradient-light-2)) !important;
    }
    
    /* Ensure all text labels have proper contrast */
    body.light-mode .quest-title,
    body.light-mode .quest-info,
    body.light-mode .subject-name,
    body.light-mode .level-info,
    body.light-mode .user-level {
        color: var(--text-light) !important; 
    }
    
    /* Make "Pilar-eLearn" logo text stand out */
    body.light-mode .logo {
        color: white !important;
        font-weight: bold;
    }
    
    /* Fix user stats text color */
    body.light-mode .user-stats .stat-value,
    body.light-mode .user-stats .stat {
        color: white !important;
    }
    
    /* Fix text on gradient backgrounds */
    body.light-mode [class*="-bg"] h3,
    body.light-mode [class*="-bg"] p {
        color: white !important;
    }
    
    /* English subject specific elements */
    body.light-mode .english-card .subject-name,
    body.light-mode .english-card .quest-title {
        color: white !important;
    }
    
    /* Fix user profile stats display */
    body.light-mode .user-profile .user-name,
    body.light-mode .user-profile .user-level {
        color: white !important;
    }
    
    /* Fix XP display in stats area */
    body.light-mode .stats-overview span,
    body.light-mode .stats-overview h3,
    body.light-mode .stats-card {
        color: var(--text-light) !important;
    }
    
    /* Fix level and achievement text */
    body.light-mode .level-badge,
    body.light-mode .scholar-badge,
    body.light-mode .level-text,
    body.light-mode .scholar-text {
        color: var(--text-light) !important;
    }
    
    /* Fix stats numbers to be more visible */
    body.light-mode .stat-number,
    body.light-mode .stat-label {
        color: var(--text-light) !important;
        font-weight: 600;
    }
    
    /* Fix English subject progress text */
    body.light-mode .english-progress .progress-info span,
    body.light-mode .english-card .progress-info span {
        color: var(--text-light) !important;
    }
    
    /* Fix remaining status texts */
    body.light-mode .quest-status {
        background-color: rgba(37, 99, 235, 0.1);
        color: var(--gradient-light-1) !important;
        font-weight: 600;
    }
    
    /* Ensure all cards have proper styles */
    body.light-mode .subject-card {
        border: 1px solid rgba(191, 219, 254, 0.4);
    }
    
    /* Fix reward items text */
    body.light-mode .reward-item {
        color: var(--text-light) !important;
    }
    
    body.light-mode .reward-item i {
        color: var(--gradient-light-1) !important;
    }
    
    /* Fix all progress info text */
    body.light-mode .progress-info span {
        color: var(--text-light) !important;
    }
    
    /* Ensure all colored text matches the new theme */
    body.light-mode .text-primary {
        color: var(--gradient-light-1) !important;
    }
    
    body.light-mode .text-accent {
        color: var(--gradient-light-2) !important;
    }
    </style>
</head>
    <div class="loader-overlay">
    </style>
        <div class="loader"></div>
    </div>

    <!-- Header -->
    <header>
        <div class="container header-content">
            <div class="theme-controls">
                <button class="theme-toggle" id="themeToggle" aria-label="Toggle Dark/Light Mode">
                    <i class="fas fa-adjust"></i>
                </button>
            </div>
            <div class="logo">
                <i class="fas fa-gamepad"></i>
                Pilar-eLearn
            </div>
            <div class="user-stats">
                <div class="stat">
                    <i class="fas fa-bolt"></i>
                    <span class="stat-value">1,250 XP</span>
                </div>
                <div class="stat">
                    <i class="fas fa-coins"></i>
                    <span class="stat-value">175</span>
                </div>
                <div class="stat">
                    <i class="fas fa-trophy"></i>
                    <span class="stat-value">12/50</span>
                </div>
            </div>
            <div class="user-profile" id="userProfileDisplay">
                <div class="avatar" id="userAvatarDisplay">JS</div>
                <div>
                    <div class="user-name" id="userNameDisplay">Player</div>
                    <div class="user-level">Level 5 Scholar</div>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main>
        <div class="container">
            <div class="dashboard-header">
                <h1 class="welcome-message">Welcome to your adventure, <span id="welcomeNameDisplay">Scholar</span>!</h1>
                <p class="sub-message">Continue your quests and earn rewards. You're making great progress!</p>
            </div>

            <!-- Quest Board (Subject Cards) -->
            <div class="quest-board">
                <!-- English -->
                <div class="subject-card">
                    <div class="card-header english-bg">
                        <div class="subject-title">
                            <div class="subject-icon english-icon">
                                <i class="fas fa-book"></i>
                            </div>
                            English
                        </div>
                    </div>
                    <div class="card-content">
                        <h3>Current Quest</h3>
                        <p>Literary Analysis: The Hero's Journey</p>

                        <div class="quest-progress">
                            <div class="progress-info">
                                <span>Quest Progress</span>
                                <span>75%</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill english-progress" style="width: 75%"></div>
                            </div>
                        </div>

                        <div class="rewards-info">
                            <div class="rewards">
                                <div class="reward-item">
                                    <i class="fas fa-bolt"></i>
                                    <span>100 XP</span>
                                </div>
                                <div class="reward-item">
                                    <i class="fas fa-coins"></i>
                                    <span>25</span>
                                </div>
                            </div>
                            <div class="quest-status">In Progress</div>
                        </div>

                        <a href="Subjects/english.html" class="quest-button">Continue Quest</a>
                    </div>
                </div>

                <!-- Filipino -->
                <div class="subject-card">
                    <div class="card-header filipino-bg">
                        <div class="subject-title">
                            <div class="subject-icon filipino-icon">
                                <i class="fas fa-pen"></i>
                            </div>
                            Filipino
                        </div>
                    </div>
                    <div class="card-content">
                        <h3>Current Quest</h3>
                        <p>Panitikang Pilipino: Noli Me Tangere</p>

                        <div class="quest-progress">
                            <div class="progress-info">
                                <span>Quest Progress</span>
                                <span>60%</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill filipino-progress" style="width: 60%"></div>
                            </div>
                        </div>

                        <div class="rewards-info">
                            <div class="rewards">
                                <div class="reward-item">
                                    <i class="fas fa-bolt"></i>
                                    <span>85 XP</span>
                                </div>
                                <div class="reward-item">
                                    <i class="fas fa-coins"></i>
                                    <span>20</span>
                                </div>
                            </div>
                            <div class="quest-status">In Progress</div>
                        </div>

                        <a href="Subjects/filipino.html" class="quest-button">Continue Quest</a>
                    </div>
                </div>

                <!-- Science -->
                <div class="subject-card">
                    <div class="card-header science-bg">
                        <div class="subject-title">
                            <div class="subject-icon science-icon">
                                <i class="fas fa-flask"></i>
                            </div>
                            Science
                        </div>
                    </div>
                    <div class="card-content">
                        <h3>Current Quest</h3>
                        <p>Earth Science: Plate Tectonics</p>

                        <div class="quest-progress">
                            <div class="progress-info">
                                <span>Quest Progress</span>
                                <span>82%</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill science-progress" style="width: 82%"></div>
                            </div>
                        </div>

                        <div class="rewards-info">
                            <div class="rewards">
                                <div class="reward-item">
                                    <i class="fas fa-bolt"></i>
                                    <span>120 XP</span>
                                </div>
                                <div class="reward-item">
                                    <i class="fas fa-coins"></i>
                                    <span>30</span>
                                </div>
                            </div>
                            <div class="quest-status">Almost Done!</div>
                        </div>

                        <a href="Subjects/science.html" class="quest-button">Continue Quest</a>
                    </div>
                </div>

                <!-- Math -->
                <div class="subject-card">
                    <div class="card-header math-bg">
                        <div class="subject-title">
                            <div class="subject-icon math-icon">
                                <i class="fas fa-calculator"></i>
                            </div>
                            Math
                        </div>
                    </div>
                    <div class="card-content">
                        <h3>Current Quest</h3>
                        <p>Algebra: Quadratic Equations</p>

                        <div class="quest-progress">
                            <div class="progress-info">
                                <span>Quest Progress</span>
                                <span>45%</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill math-progress" style="width: 45%"></div>
                            </div>
                        </div>

                        <div class="rewards-info">
                            <div class="rewards">
                                <div class="reward-item">
                                    <i class="fas fa-bolt"></i>
                                    <span>150 XP</span>
                                </div>
                                <div class="reward-item">
                                    <i class="fas fa-coins"></i>
                                    <span>40</span>
                                </div>
                            </div>
                            <div class="quest-status">In Progress</div>
                        </div>

                        <a href="Subjects/science.html" class="quest-button">Continue Quest</a>
                    </div>
                </div>
            </div>

            <!-- Achievements Section -->
            <section class="achievements-section">
                <div class="section-header">
                    <h2 class="section-title">
                        <i class="fas fa-trophy"></i>
                        Achievements
                    </h2>
                    <div class="view-all">
                        View All
                        <i class="fas fa-chevron-right"></i>
                    </div>
                </div>
                <div class="achievements-grid">
                    <div class="achievement">
                        <div class="achievement-icon">
                            <i class="fas fa-book"></i>
                        </div>
                        <div class="achievement-name">Bookworm</div>
                        <div class="achievement-progress">3/5</div>
                    </div>
                    <div class="achievement">
                        <div class="achievement-icon">
                            <i class="fas fa-pen"></i>
                        </div>
                        <div class="achievement-name">Writer</div>
                        <div class="achievement-progress">2/3</div>
                    </div>
                    <div class="achievement">
                        <div class="achievement-icon">
                            <i class="fas fa-flask"></i>
                        </div>
                        <div class="achievement-name">Scientist</div>
                        <div class="achievement-progress">4/5</div>
                    </div>
                    <div class="achievement">
                        <div class="achievement-icon">
                            <i class="fas fa-calculator"></i>
                        </div>
                        <div class="achievement-name">Mathematician</div>
                        <div class="achievement-progress">1/4</div>
                    </div>
                    <div class="achievement">
                        <div class="achievement-icon">
                            <i class="fas fa-fire"></i>
                        </div>
                        <div class="achievement-name">Streak Master</div>
                        <div class="achievement-progress">7/10</div>
                    </div>
                    <div class="achievement">
                        <div class="achievement-icon">
                            <i class="fas fa-star"></i>
                        </div>
                        <div class="achievement-name">Perfect Score</div>
                        <div class="achievement-progress">2/5</div>
                    </div>
                </div>
            </section>

            <!-- Activity Feed -->
            <section class="activity-feed">
                <div class="section-header">
                    <h2 class="section-title">
                        <i class="fas fa-history"></i>
                        Recent Activity
                    </h2>
                    <div class="view-all">
                        View All
                        <i class="fas fa-chevron-right"></i>
                    </div>
                </div>
                <div class="activity-list">
                    <div class="activity-item">
                        <div class="activity-icon english-activity">
                            <i class="fas fa-book"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">Completed English Quiz: Elements of a Story</div>
                            <div class="activity-details">
                                <div class="activity-time">2 hours ago</div>
                                <div class="activity-rewards">
                                    <div class="xp-reward">
                                        <i class="fas fa-bolt"></i>
                                        <span>50 XP</span>
                                    </div>
                                    <div class="coin-reward">
                                        <i class="fas fa-coins"></i>
                                        <span>15</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-icon science-activity">
                            <i class="fas fa-flask"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">Watched Science Video: Types of Plate Boundaries</div>
                            <div class="activity-details">
                                <div class="activity-time">Yesterday</div>
                                <div class="activity-rewards">
                                    <div class="xp-reward">
                                        <i class="fas fa-bolt"></i>
                                        <span>30 XP</span>
                                    </div>
                                    <div class="coin-reward">
                                        <i class="fas fa-coins"></i>
                                        <span>5</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-icon filipino-activity">
                            <i class="fas fa-pen"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-title">Submitted Filipino Essay: Kahalagahan ng Wikang Filipino</div>
                            <div class="activity-details">
                                <div class="activity-time">2 days ago</div>
                                <div class="activity-rewards">
                                    <div class="xp-reward">
                                        <i class="fas fa-bolt"></i>
                                        <span>75 XP</span>
                                    </div>
                                    <div class="coin-reward">
                                        <i class="fas fa-coins"></i>
                                        <span>20</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </main>

    <!-- Welcome Modal -->
    <div class="modal-overlay active" id="welcomeModal">
        <div class="modal">
            <div class="modal-header">
                <div id="modalTitle" class="modal-title">Welcome to Pilar-eLearn!</div>
                <div id="modalSubtitle" class="modal-subtitle">Create your learning adventure profile</div>
            </div>
            <div class="modal-content">
                <form id="userProfileForm">
                    <div class="form-group">
                        <label class="form-label" for="userName">Your Name</label>
                        <input type="text" class="form-control" id="userName" placeholder="Enter your name" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="userEmail">Your Email</label>
                        <input type="email" class="form-control" id="userEmail" placeholder="Enter your email" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="gradeLevel">Grade Level</label>
                        <select class="form-control" id="gradeLevel" style="background-color: var(--card-bg); color: var(--text); border: 1px solid var(--accent);">
                            <option value="" style="color: var(--text);">Select your grade</option>
                            <option value="1" style="color: var(--text);">Grade 1</option>
                            <option value="2" style="color: var(--text);">Grade 2</option>
                            <option value="3" style="color: var(--text);">Grade 3</option>
                            <option value="4" style="color: var(--text);">Grade 4</option>
                            <option value="5" style="color: var(--text);">Grade 5</option>
                            <option value="6" style="color: var(--text);">Grade 6</option>

                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Choose Your Avatar</label>
                        <div class="avatar-selection">
                            <div class="avatar-option avatar-1 selected" data-avatar="1">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="avatar-option avatar-2" data-avatar="2">
                                <i class="fas fa-user-graduate"></i>
                            </div>
                            <div class="avatar-option avatar-3" data-avatar="3">
                                <i class="fas fa-user-astronaut"></i>
                            </div>
                            <div class="avatar-option avatar-4" data-avatar="4">
                                <i class="fas fa-user-ninja"></i>
                            </div>
                        </div>
                    </div>
                    <div class="accessibility-options">
                        <div class="option-title">
                            <i class="fas fa-universal-access"></i>
                            Accessibility Options
                        </div>
                        <p>Select any options that can help improve your learning experience:</p>
                        <div class="checkbox-group">
                            <label class="checkbox-option">
                                <input type="checkbox" class="checkbox-input" id="dyslexiaOption">
                                <span class="checkbox-label">Dyslexia Support</span>
                            </label>
                            <label class="checkbox-option">
                                <input type="checkbox" class="checkbox-input" id="adhOption">
                                <span class="checkbox-label">ADHD Focus Mode</span>
                            </label>
                            <label class="checkbox-option">
                                <input type="checkbox" class="checkbox-input" id="colorBlindOption">
                                <span class="checkbox-label">Color Blind Friendly</span>
                            </label>
                            <label class="checkbox-option">
                                <input type="checkbox" class="checkbox-input" id="highContrastOption">
                                <span class="checkbox-label">High Contrast</span>
                            </label>
                            <label class="checkbox-option">
                                <input type="checkbox" class="checkbox-input" id="slowConnectionOption">
                                <span class="checkbox-label">Low Bandwidth Mode</span>
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="modal-btn btn-secondary" id="skipButton">Skip for Now</button>
                <button class="modal-btn btn-primary" id="startButton">Start Adventure</button>
            </div>
        </div>
    </div>
    <script src="languages.js"></script>
    <script src="accessibilityManager.js"></script>
    <script>
 

  
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const welcomeModal = document.getElementById('welcomeModal');
            const userProfileForm = document.getElementById('userProfileForm');
            const userName = document.getElementById('userName');
            const userEmail = document.getElementById('userEmail');
            const gradeLevel = document.getElementById('gradeLevel');
            const avatarOptions = document.querySelectorAll('.avatar-option');
            const skipButton = document.getElementById('skipButton');
            const startButton = document.getElementById('startButton');
            
            // Accessibility checkboxes
            const dyslexiaOption = document.getElementById('dyslexiaOption');
            const adhOption = document.getElementById('adhOption');
            const colorBlindOption = document.getElementById('colorBlindOption');
            const highContrastOption = document.getElementById('highContrastOption');
            const slowConnectionOption = document.getElementById('slowConnectionOption');
            
            // User display elements
            const userNameDisplay = document.getElementById('userNameDisplay');
            const welcomeNameDisplay = document.getElementById('welcomeNameDisplay');
            const userAvatarDisplay = document.getElementById('userAvatarDisplay');
            const userProfileDisplay = document.getElementById('userProfileDisplay');
            
            initTextToSpeech();
        initThemeToggle();
            // Avatar selection
            let selectedAvatar = '1';
            avatarOptions.forEach(option => {
                option.addEventListener('click', function() {
                    // Remove selected class from all options
                    avatarOptions.forEach(opt => opt.classList.remove('selected'));
                    // Add selected class to clicked option
                    this.classList.add('selected');
                    // Store selected avatar
                    selectedAvatar = this.getAttribute('data-avatar');
                });
            });
            
            // Skip button - use default values
            skipButton.addEventListener('click', function() {
                // Close modal with default values
                welcomeModal.classList.remove('active');
                
                // Set default name
                userNameDisplay.textContent = 'Scholar';
                welcomeNameDisplay.textContent = 'Scholar';
                
                // Set default avatar
                userAvatarDisplay.innerHTML = '<i class="fas fa-user"></i>';
            });
            
            // Start button - use form values
            startButton.addEventListener('click', function() {
                // Basic validation
                if (userName.value.trim() === '') {
                    userName.focus();
                    userName.style.borderColor = 'var(--danger)';
                    return;
                }
                
                if (userEmail.value.trim() === '') {
                    userEmail.focus();
                    userEmail.style.borderColor = 'var(--danger)';
                    return;
                }
                
                // Get first name for display
                const name = userName.value.trim().split(' ')[0];
                
                // Update displays
                userNameDisplay.textContent = name;
                welcomeNameDisplay.textContent = name;
                
                // Set avatar based on selection
                let avatarIcon = '';
                switch(selectedAvatar) {
                    case '1':
                        avatarIcon = '<i class="fas fa-user"></i>';
                        break;
                    case '2':
                        avatarIcon = '<i class="fas fa-user-graduate"></i>';
                        break;
                    case '3':
                        avatarIcon = '<i class="fas fa-user-astronaut"></i>';
                        break;
                    case '4':
                        avatarIcon = '<i class="fas fa-user-ninja"></i>';
                        break;
                    default:
                        avatarIcon = '<i class="fas fa-user"></i>';
                }
                userAvatarDisplay.innerHTML = avatarIcon;
                
                // Apply accessibility options
                if (dyslexiaOption.checked) {
                    document.body.classList.add('dyslexia-friendly');
                }
                
                if (adhOption.checked) {
                    document.body.classList.add('focus-mode');
                }
                
                if (colorBlindOption.checked) {
                    document.body.classList.add('color-blind-friendly');
                }
                
                if (highContrastOption.checked) {
                    document.body.classList.add('high-contrast');
                }
                
                if (slowConnectionOption.checked) {
                    document.body.classList.add('slow-connection');
                    simulateSlowLoading();
                }
                
                // Close modal
                welcomeModal.classList.remove('active');
                
                // Add welcome animation
                userProfileDisplay.classList.add('pulse');
                setTimeout(() => {
                    userProfileDisplay.classList.remove('pulse');
                }, 2000);
            });
            
            // Input event listeners
            userName.addEventListener('input', function() {
                if (this.value.trim() !== '') {
                    this.style.borderColor = '';
                }
            });
            
            userEmail.addEventListener('input', function() {
                if (this.value.trim() !== '') {
                    this.style.borderColor = '';
                }
            });
            
            // Slow connection simulation
            function simulateSlowLoading() {
                const loader = document.querySelector('.loader');
                let width = 0;
                
                const interval = setInterval(function() {
                    if (width >= 100) {
                        width = 0;
                        loader.style.width = width + '%';
                    } else {
                        width += Math.random() * 3;
                        if (width > 100) width = 100;
                        loader.style.width = width + '%';
                    }
                }, 200);
            }
            
            // Apply float animation to achievements
            const achievements = document.querySelectorAll('.achievement');
        achievements.forEach((achievement, index) => {
            setTimeout(() => {
                achievement.classList.add('float');
            }, index * 300);
        });
        // Add subject data by grade level
            const subjectData = {
                // Grade 1-3 (Primary)
                "1": {
                    english: [
                        { title: "Phonics Basics", xp: 50, coins: 10, progress: 0, status: "Not Started", description: "Learn basic letter sounds and simple word formation" },
                        { title: "Reading Comprehension", xp: 60, coins: 15, progress: 0, status: "Not Started", description: "Read short stories and answer questions" },
                        { title: "Vocabulary Building", xp: 40, coins: 10, progress: 0, status: "Not Started", description: "Learn new words and their meanings" }
                    ],
                    filipino: [
                        { title: "Alpabetong Filipino", xp: 50, coins: 10, progress: 0, status: "Not Started", description: "Pag-aaral ng mga titik at tunog" },
                        { title: "Mga Salita at Kahulugan", xp: 60, coins: 15, progress: 0, status: "Not Started", description: "Pag-aaral ng mga simpleng salita" },
                        { title: "Mga Maikling Kwento", xp: 40, coins: 10, progress: 0, status: "Not Started", description: "Pagbasa ng maikling kwento" }
                    ],
                    math: [
                        { title: "Counting Numbers", xp: 50, coins: 10, progress: 0, status: "Not Started", description: "Learn to count from 1 to 100" },
                        { title: "Basic Addition", xp: 60, coins: 15, progress: 0, status: "Not Started", description: "Learn to add numbers up to 20" },
                        { title: "Basic Subtraction", xp: 40, coins: 10, progress: 0, status: "Not Started", description: "Learn to subtract numbers up to 20" }
                    ],
                    science: [
                        { title: "Plants & Animals", xp: 50, coins: 10, progress: 0, status: "Not Started", description: "Learn about basic living things" },
                        { title: "Weather & Seasons", xp: 60, coins: 15, progress: 0, status: "Not Started", description: "Learn about weather patterns" },
                        { title: "My Body", xp: 40, coins: 10, progress: 0, status: "Not Started", description: "Learn about basic body parts and functions" }
                    ]
                },
                // Grade 4-6 (Intermediate)
                "4": {
                    english: [
                        { title: "Grammar Fundamentals", xp: 70, coins: 20, progress: 0, status: "Not Started", description: "Learn parts of speech and sentence structure" },
                        { title: "Creative Writing", xp: 80, coins: 25, progress: 0, status: "Not Started", description: "Write original short stories" },
                        { title: "Reading Analysis", xp: 75, coins: 20, progress: 0, status: "Not Started", description: "Analyze character, plot, and setting" }
                    ],
                    filipino: [
                        { title: "Mga Maikling Kwento", xp: 70, coins: 20, progress: 0, status: "Not Started", description: "Pagbasa at pag-unawa ng mga kuwento" },
                        { title: "Pagsulat ng Sanaysay", xp: 80, coins: 25, progress: 0, status: "Not Started", description: "Pagsulat ng maikling sanaysay" },
                        { title: "Mga Sawikain", xp: 75, coins: 20, progress: 0, status: "Not Started", description: "Pag-aaral ng mga sawikain at kasabihan" }
                    ],
                    math: [
                        { title: "Multiplication & Division", xp: 70, coins: 20, progress: 0, status: "Not Started", description: "Master times tables and division" },
                        { title: "Fractions", xp: 80, coins: 25, progress: 0, status: "Not Started", description: "Learn to add, subtract, and compare fractions" },
                        { title: "Measurements", xp: 75, coins: 20, progress: 0, status: "Not Started", description: "Learn to measure length, weight, and volume" }
                    ],
                    science: [
                        { title: "Earth Science", xp: 70, coins: 20, progress: 0, status: "Not Started", description: "Learn about rocks, soil, and landforms" },
                        { title: "Life Cycles", xp: 80, coins: 25, progress: 0, status: "Not Started", description: "Study plant and animal life cycles" },
                        { title: "Energy & Matter", xp: 75, coins: 20, progress: 0, status: "Not Started", description: "Explore basic physics concepts" }
                    ]
                },
                // Grade 7-10 (Junior High)
                "7": {
                    english: [
                        { title: "Literary Analysis", xp: 100, coins: 30, progress: 0, status: "Not Started", description: "Analyze themes and literary devices" },
                        { title: "Essay Writing", xp: 110, coins: 35, progress: 0, status: "Not Started", description: "Learn argumentative essay structure" },
                        { title: "Public Speaking", xp: 90, coins: 30, progress: 0, status: "Not Started", description: "Practice speeches and presentations" }
                    ],
                    filipino: [
                        { title: "Noli Me Tangere", xp: 100, coins: 30, progress: 0, status: "Not Started", description: "Pag-aaral ng nobelang Noli Me Tangere" },
                        { title: "Panitikang Pilipino", xp: 110, coins: 35, progress: 0, status: "Not Started", description: "Mga akda ng kilalang Pilipinong manunulat" },
                        { title: "Retorika", xp: 90, coins: 30, progress: 0, status: "Not Started", description: "Pag-aaral ng maayos na pagsasalita" }
                    ],
                    math: [
                        { title: "Algebra Basics", xp: 100, coins: 30, progress: 0, status: "Not Started", description: "Learn to solve for variables" },
                        { title: "Geometry", xp: 110, coins: 35, progress: 0, status: "Not Started", description: "Study shapes, angles, and theorems" },
                        { title: "Statistics", xp: 90, coins: 30, progress: 0, status: "Not Started", description: "Learn to analyze data and probability" }
                    ],
                    science: [
                        { title: "Plate Tectonics", xp: 100, coins: 30, progress: 0, status: "Not Started", description: "Study earth's crust and movements" },
                        { title: "Cell Biology", xp: 110, coins: 35, progress: 0, status: "Not Started", description: "Learn about cells and their functions" },
                        { title: "Chemical Reactions", xp: 90, coins: 30, progress: 0, status: "Not Started", description: "Study basic chemistry principles" }
                    ]
                },
                // Grade 11-12 (Senior High)
                "11": {
                    english: [
                        { title: "Research Writing", xp: 130, coins: 40, progress: 0, status: "Not Started", description: "Learn to research and cite sources" },
                        { title: "World Literature", xp: 140, coins: 45, progress: 0, status: "Not Started", description: "Study important global literary works" },
                        { title: "Critical Analysis", xp: 120, coins: 40, progress: 0, status: "Not Started", description: "Develop critical thinking skills" }
                    ],
                    filipino: [
                        { title: "Kontemporaryong Panitikan", xp: 130, coins: 40, progress: 0, status: "Not Started", description: "Modernong akda at sining" },
                        { title: "El Filibusterismo", xp: 140, coins: 45, progress: 0, status: "Not Started", description: "Pag-aaral ng nobelang El Filibusterismo" },
                        { title: "Malikhaing Pagsulat", xp: 120, coins: 40, progress: 0, status: "Not Started", description: "Pagsulat ng iba't ibang uri ng akda" }
                    ],
                    math: [
                        { title: "Trigonometry", xp: 130, coins: 40, progress: 0, status: "Not Started", description: "Learn about trigonometric functions" },
                        { title: "Calculus", xp: 140, coins: 45, progress: 0, status: "Not Started", description: "Study derivatives and integrals" },
                        { title: "Advanced Algebra", xp: 120, coins: 40, progress: 0, status: "Not Started", description: "Work with complex equations" }
                    ],
                    science: [
                        { title: "Physics", xp: 130, coins: 40, progress: 0, status: "Not Started", description: "Study forces, energy, and motion" },
                        { title: "Advanced Biology", xp: 140, coins: 45, progress: 0, status: "Not Started", description: "Learn about genetics and ecosystems" },
                        { title: "Chemistry", xp: 120, coins: 40, progress: 0, status: "Not Started", description: "Study matter, reactions, and compounds" }
                    ]
                }
            };
            
            // Function to get subject data for selected grade
            function getSubjectDataForGrade(grade) {
                // Default to grade 7 if not found
                if (!subjectData[grade]) {
                    // Find closest available grade
                    const grades = Object.keys(subjectData).map(Number).sort((a, b) => a - b);
                    let closestGrade = grades[0];
                    for (const g of grades) {
                        if (g <= grade) {
                            closestGrade = g;
                        } else {
                            break;
                        }
                    }
                    return subjectData[closestGrade];
                }
                return subjectData[grade];
            }
            function optimizeModalScroll() {
    const modalContent = document.querySelector('.modal-content');
    
    // Use passive event listener
    modalContent.addEventListener('scroll', function(e) {
        // Use requestAnimationFrame for smoother performance
        requestAnimationFrame(() => {
            const scrollPosition = modalContent.scrollTop;
            const totalScrollHeight = modalContent.scrollHeight - modalContent.clientHeight;
            const scrollPercentage = Math.min(Math.round((scrollPosition / totalScrollHeight) * 100), 100);
            
            const progressBar = modalContent.querySelector('#lessonProgressBar');
            const progressText = modalContent.querySelector('#lessonProgressText');
            
            if (progressBar && progressText) {
                progressBar.style.width = `${scrollPercentage}%`;
                progressText.textContent = `${scrollPercentage}%`;
            }
        });
    }, { passive: true });
}
            // Function to update subject cards based on grade
            function updateSubjectCards(grade) {
                const data = getSubjectDataForGrade(grade);
                
                // Update English
                updateSubjectCard('english', data.english[0]);
                
                // Update Filipino
                updateSubjectCard('filipino', data.filipino[0]);
                
                // Update Math
                updateSubjectCard('math', data.math[0]);
                
                // Update Science
                updateSubjectCard('science', data.science[0]);
                
                // Store all subjects data for this grade
                window.currentGradeData = data;
            }
            
            // Function to update a specific subject card
            function updateSubjectCard(subject, topicData) {
                const card = document.querySelector(`.subject-card .${subject}-bg`).parentElement;
                const titleElement = card.querySelector('h3');
                const descriptionElement = card.querySelector('p');
                const progressElement = card.querySelector('.progress-fill');
                const progressTextElement = card.querySelector('.progress-info span:last-child');
                const xpElement = card.querySelector('.reward-item:first-child span');
                const coinsElement = card.querySelector('.reward-item:last-child span');
                const statusElement = card.querySelector('.quest-status');
                
                // Update content
                titleElement.nextElementSibling.textContent = topicData.title;
                descriptionElement.textContent = topicData.description;
                progressElement.style.width = topicData.progress + '%';
                progressTextElement.textContent = topicData.progress + '%';
                xpElement.textContent = topicData.xp + ' XP';
                coinsElement.textContent = topicData.coins;
                statusElement.textContent = topicData.status;
                
                // Make the continue button interactive
                const continueButton = modal.querySelector('#completeLesson');
    continueButton.addEventListener('click', function(e) {
        e.preventDefault();
        const subject = this.getAttribute('data-subject');
        const title = this.getAttribute('data-title');
        
        // Map subject to correct HTML file
        const subjectPages = {
            'english': 'english.html',
            'filipino': 'filipino.html',
            'math': 'math.html',
            'science': 'science.html'
        };
        
        // Redirect to the specific subject page
        if (subjectPages[subject]) {
            window.location.href = `Subjects/${subjectPages[subject]}`;
        }
    });
    
    // Add event listeners for other buttons
    modal.querySelector('.close-modal').addEventListener('click', function() {
        modal.classList.remove('active');
    });
    
    modal.querySelector('#closeLesson').addEventListener('click', function() {
        modal.classList.remove('active');
    });
    
    return modal;
}
            
            
            // Create lesson modal
            function createLessonModal() {
                const modal = document.createElement('div');
                modal.className = 'modal-overlay';
                modal.id = 'lessonModal';
                
                modal.innerHTML = `
                    <div class="modal" style="max-width: 700px;">
                        <div class="modal-header">
                            <div class="modal-title">Lesson Content</div>
                            <button class="close-modal">&times;</button>
                        </div>
                        <div class="modal-content" style="max-height: 60vh; overflow-y: auto;">
                            <div id="lessonContent">
                                <!-- Content will be inserted here -->
                            </div>
                            <div class="progress-section" style="margin-top: 20px;">
                                <div class="progress-info">
                                    <span>Lesson Progress</span>
                                    <span id="lessonProgressText">0%</span>
                                </div>
                                <div class="progress-bar">
                                    <div class="progress-fill" id="lessonProgressBar" style="width: 0%"></div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="modal-btn btn-secondary" id="closeLesson">Back to Dashboard</button>
                            <button class="modal-btn btn-primary" id="completeLesson">Continue to Lesson</button>
                        </div>
                    </div>
                `;
                
                document.body.appendChild(modal);
                
                // Add event listeners
                modal.querySelector('.close-modal').addEventListener('click', function() {
                    modal.classList.remove('active');
                });
                
                modal.querySelector('#closeLesson').addEventListener('click', function() {
                    modal.classList.remove('active');
                });
                
                modal.querySelector('#completeLesson').addEventListener('click', function(e) {
                    e.preventDefault();
                    modal.classList.remove('active');
                });
                
                return modal;
            }
            
            // Show lesson modal with content
            function showLessonModal(subject, topicData) {
                let lessonModal = document.getElementById('lessonModal');
    if (!lessonModal) {
        lessonModal = createLessonModal();
        document.body.appendChild(lessonModal);
    }
                
                // Set attributes for tracking
                const continueButton = lessonModal.querySelector('#completeLesson');
    continueButton.setAttribute('data-subject', subject);
    continueButton.setAttribute('data-title', topicData.title);
                
                // Get content element
                const contentElement = lessonModal.querySelector('#lessonContent');
                
                // Generate content based on subject and topic
                let content = '';
                switch(subject) {
                    case 'english':
                        content = generateEnglishContent(topicData);
                        break;
                    case 'filipino':
                        content = generateFilipinoContent(topicData);
                        break;
                    case 'math':
                        content = generateMathContent(topicData);
                        break;
                    case 'science':
                        content = generateScienceContent(topicData);
                        break;
                }
                
                // Set content
                contentElement.innerHTML = content;
                
                // Reset progress
                lessonModal.querySelector('#lessonProgressBar').style.width = '0%';
                lessonModal.querySelector('#lessonProgressText').textContent = '0%';
                
                // Show modal
                lessonModal.classList.add('active');
                
                // Simulate progress as user scrolls
                const modalContent = lessonModal.querySelector('.modal-content');
                modalContent.addEventListener('scroll', function() {
                    const scrollPosition = modalContent.scrollTop;
                    const totalScrollHeight = modalContent.scrollHeight - modalContent.clientHeight;
                    const scrollPercentage = Math.min(Math.round((scrollPosition / totalScrollHeight) * 100), 100);
                    
                    lessonModal.querySelector('#lessonProgressBar').style.width = scrollPercentage + '%';
                    lessonModal.querySelector('#lessonProgressText').textContent = scrollPercentage + '%';
                    
                    // Enable complete button if scrolled more than 70%
                    if (scrollPercentage > 70) {
                        lessonModal.querySelector('#completeLesson').disabled = false;
                    }
                });
                
                // Initially disable complete button
                lessonModal.querySelector('#completeLesson').disabled = true;
            }
            
            // Complete a lesson
            function completeLesson(subject, title) {
                // Find the subject and topic in current grade data
                const data = window.currentGradeData;
                let topicIndex = -1;
                
                for (let i = 0; i < data[subject].length; i++) {
                    if (data[subject][i].title === title) {
                        topicIndex = i;
                        break;
                    }
                }
                
                if (topicIndex !== -1) {
                    // Update progress and status
                    data[subject][topicIndex].progress = 100;
                    data[subject][topicIndex].status = "Completed";
                    
                    // Update the card
                    updateSubjectCard(subject, data[subject][topicIndex]);
                    
                    // Add to activity feed
                    addActivity(subject, title, data[subject][topicIndex].xp, data[subject][topicIndex].coins);
                    
                    // Update user stats
                    updateUserStats(data[subject][topicIndex].xp, data[subject][topicIndex].coins);
                    
                    // Show next topic if available
                    if (topicIndex < data[subject].length - 1) {
                        // Update to next topic
                        updateSubjectCard(subject, data[subject][topicIndex + 1]);
                    }
                }
            }
            
            // Update user stats
            function updateUserStats(xp, coins) {
                const xpElement = document.querySelector('.user-stats .stat:first-child .stat-value');
                const coinsElement = document.querySelector('.user-stats .stat:nth-child(2) .stat-value');
                
                let currentXP = parseInt(xpElement.textContent) || 0;
                let currentCoins = parseInt(coinsElement.textContent) || 0;
                
                // Add new values
                currentXP += xp;
                currentCoins += coins;
                
                // Update display
                xpElement.textContent = currentXP.toLocaleString() + ' XP';
                coinsElement.textContent = currentCoins;
                
                // Animate
                xpElement.parentElement.classList.add('pulse');
                coinsElement.parentElement.classList.add('pulse');
                
                setTimeout(() => {
                    xpElement.parentElement.classList.remove('pulse');
                    coinsElement.parentElement.classList.remove('pulse');
                }, 2000);
            }
            
            // Add activity to feed
            function addActivity(subject, title, xp, coins) {
                const activityList = document.querySelector('.activity-list');
                const newActivity = document.createElement('div');
                newActivity.className = 'activity-item';
                
                newActivity.innerHTML = `
                    <div class="activity-icon ${subject}-activity">
                        <i class="fas ${getSubjectIcon(subject)}"></i>
                    </div>
                    <div class="activity-content">
                        <div class="activity-title">Completed ${title}</div>
                        <div class="activity-details">
                            <div class="activity-time">Just now</div>
                            <div class="activity-rewards">
                                <div class="xp-reward">
                                    <i class="fas fa-bolt"></i>
                                    <span>${xp} XP</span>
                                </div>
                                <div class="coin-reward">
                                    <i class="fas fa-coins"></i>
                                    <span>${coins}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                // Add to top of list
                if (activityList.firstChild) {
                    activityList.insertBefore(newActivity, activityList.firstChild);
                } else {
                    activityList.appendChild(newActivity);
                }
                
                // Limit to 5 activities
                if (activityList.children.length > 5) {
                    activityList.removeChild(activityList.lastChild);
                }
                
                // Animation
                newActivity.style.opacity = '0';
                newActivity.style.transform = 'translateY(-20px)';
                
                setTimeout(() => {
                    newActivity.style.transition = 'all 0.5s ease';
                    newActivity.style.opacity = '1';
                    newActivity.style.transform = 'translateY(0)';
                }, 100);
            }
            
            // Get icon for subject
            function getSubjectIcon(subject) {
                switch(subject) {
                    case 'english': return 'fa-book';
                    case 'filipino': return 'fa-pen';
                    case 'math': return 'fa-calculator';
                    case 'science': return 'fa-flask';
                    default: return 'fa-file';
                }
            }
            
            // Generate content for each subject
            function generateEnglishContent(topicData) {
                return `
                    <h2>${topicData.title}</h2>
                    <p>${topicData.description}</p>
                    <div style="margin: 20px 0;">
                        <h3>Learning Objectives</h3>
                        <ul>
                            <li>Understand key concepts related to ${topicData.title.toLowerCase()}</li>
                            <li>Develop critical thinking skills through analysis and interpretation</li>
                            <li>Apply language concepts in practical contexts</li>
                        </ul>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Key Concepts</h3>
                        <p>This lesson covers important English language and literature concepts that will help you communicate effectively and analyze texts with deeper understanding.</p>
                        <p>English helps us develop critical thinking skills and express our ideas clearly and persuasively.</p>
                        <p>Through consistent practice and application, you'll improve your reading comprehension, writing, and analytical abilities.</p>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Practice Activities</h3>
                        <p>Complete these activities to reinforce your learning:</p>
                        <ol>
                            <li>Read the provided text and identify the main themes</li>
                            <li>Write a short response analyzing the author's techniques</li>
                            <li>Complete the vocabulary exercises</li>
                            <li>Participate in the group discussion</li>
                        </ol>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Additional Resources</h3>
                        <p>Explore these resources to deepen your understanding:</p>
                        <ul>
                            <li>Interactive grammar exercises</li>
                            <li>Recommended reading list</li>
                            <li>Video tutorials on literary analysis</li>
                        </ul>
                    </div>
                `;
            }
            
            function generateFilipinoContent(topicData) {
                return `
                    <h2>${topicData.title}</h2>
                    <p>${topicData.description}</p>
                    <div style="margin: 20px 0;">
                        <h3>Mga Layunin sa Pagkatuto</h3>
                        <ul>
                            <li>Maunawaan ang mahahalagang konsepto tungkol sa ${topicData.title.toLowerCase()}</li>
                            <li>Mapaunlad ang kakayahan sa pag-iisip at pagsusuri</li>
                            <li>Makapagsanay sa paggamit ng wikang Filipino</li>
                        </ul>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Mahahalagang Konsepto</h3>
                        <p>Ang araling ito ay sumasaklaw sa mahahalagang konsepto ng wika at panitikang Filipino na tutulong sa iyong maunawaan ang ating kultura at pagkakakilanlan.</p>
                        <p>Ang wikang Filipino ay nagsisilbing instrumento ng pambansang pagkakaisa at pagpapahayag ng ating kulturang Pilipino.</p>
                        <p>Sa pamamagitan ng patuloy na pagsasanay at pag-aaral, mapapaunlad mo ang iyong kakayahan sa pagbasa, pagsulat, at pag-unawa ng wikang Filipino.</p>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Mga Gawain</h3>
                        <p>Kumpletuhin ang mga sumusunod na gawain:</p>
                        <ol>
                            <li>Basahin ang teksto at tukuyin ang pangunahing tema</li>
                            <li>Sumulat ng maikling reaksyon tungkol sa binasa</li>
                            <li>Kumpletuhin ang mga pagsasanay sa bokabularyo</li>
                            <li>Makilahok sa talakayan ng grupo</li>
                        </ol>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Karagdagang Sanggunian</h3>
                        <p>Tuklasin ang mga sumusunod na sanggunian:</p>
                        <ul>
                            <li>Mga interaktibong pagsasanay sa gramatika</li>
                            <li>Listahan ng mga inirerekomendang babasahin</li>
                            <li>Mga video tungkol sa panitikang Pilipino</li>
                        </ul>
                    </div>
                `;
            }
            
            function generateMathContent(topicData) {
                return `
                    <h2>${topicData.title}</h2>
                    <p>${topicData.description}</p>
                    <div style="margin: 20px 0;">
                        <h3>Learning Objectives</h3>
                        <ul>
                            <li>Understand key mathematical concepts related to ${topicData.title.toLowerCase()}</li>
                            <li>Develop problem-solving skills through practice</li>
                            <li>Apply mathematical concepts to real-world situations</li>
                        </ul>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Key Concepts</h3>
                        <p>This lesson covers important mathematical principles that form the foundation for more advanced concepts.</p>
                        <p>Mathematics helps us understand patterns, solve problems, and make informed decisions based on quantitative information.</p>
                        <p>Through regular practice and application, you'll develop stronger analytical and logical reasoning skills.</p>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Practice Problems</h3>
                        <p>Solve these problems to reinforce your learning:</p>
                        <ol>
                            <li>Problem 1: Apply the concept to find the solution</li>
                            <li>Problem 2: Work through this step-by-step example</li>
                            <li>Problem 3: Challenge yourself with this application</li>
                            <li>Problem 4: Analyze this real-world scenario</li>
                        </ol>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Additional Resources</h3>
                        <p>Explore these resources to deepen your understanding:</p>
                        <ul>
                            <li>Interactive practice exercises</li>
                            <li>Video tutorials on problem-solving techniques</li>
                            <li>Real-world applications of ${topicData.title.toLowerCase()}</li>
                        </ul>
                    </div>
                `;
            }
            
            function generateScienceContent(topicData) {
                return `
                    <h2>${topicData.title}</h2>
                    <p>${topicData.description}</p>
                    <div style="margin: 20px 0;">
                        <h3>Learning Objectives</h3>
                        <ul>
                            <li>Understand key scientific concepts related to ${topicData.title.toLowerCase()}</li>
                            <li>Develop scientific inquiry and critical thinking skills</li>
                            <li>Apply scientific principles to explain natural phenomena</li>
                        </ul>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Key Concepts</h3>
                        <p>This lesson explores important scientific principles that help us understand the world around us.</p>
                        <p>Science empowers us to make evidence-based decisions and solve complex problems through systematic investigation.</p>
                        <p>Through observation, experimentation, and analysis, you'll develop a deeper understanding of natural phenomena.</p>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Investigations and Activities</h3>
                        <p>Complete these activities to reinforce your learning:</p>
                        <ol>
                            <li>Observe and record data related to the topic</li>
                            <li>Conduct a simple experiment to test a hypothesis</li>
                            <li>Analyze provided data and draw conclusions</li>
                            <li>Research and report on a related scientific discovery</li>
                        </ol>
                    </div>
                    <div style="margin: 20px 0;">
                        <h3>Additional Resources</h3>
                        <p>Explore these resources to deepen your understanding:</p>
                        <ul>
                            <li>Interactive simulations and models</li>
                            <li>Video demonstrations of scientific principles</li>
                            <li>Articles on recent discoveries in this field</li>
                        </ul>
                    </div>
                `;
            }
            
            // Grade level change handler
            gradeLevel.addEventListener('change', function() {
                if (this.value) {
                    updateSubjectCards(this.value);
                }
            });
            
            // Skip button - use default values
            skipButton.addEventListener('click', function() {
                // Close modal with default values
                welcomeModal.classList.remove('active');
                
                // Set default name
                userNameDisplay.textContent = 'Scholar';
                welcomeNameDisplay.textContent = 'Scholar';
                
                // Set default avatar
                userAvatarDisplay.innerHTML = '<i class="fas fa-user"></i>';
                
                // Set default grade level (Grade 7)
                updateSubjectCards('7');
            });
            
            // Start button - use form values
            startButton.addEventListener('click', function() {
                // Basic validation
                if (userName.value.trim() === '') {
                    userName.focus();
                    userName.style.borderColor = 'var(--danger)';
                    return;
                }
                
                if (userEmail.value.trim() === '') {
                    userEmail.focus();
                    userEmail.style.borderColor = 'var(--danger)';
                    return;
                }
                
                // Get first name for display
                const name = userName.value.trim().split(' ')[0];
                
                // Update displays
                userNameDisplay.textContent = name;
                welcomeNameDisplay.textContent = name;
                
                // Set avatar based on selection
                let avatarIcon = '';
                switch(selectedAvatar) {
                    case '1':
                        avatarIcon = '<i class="fas fa-user"></i>';
                        break;
                    case '2':
                        avatarIcon = '<i class="fas fa-user-graduate"></i>';
                        break;
                    case '3':
                        avatarIcon = '<i class="fas fa-user-astronaut"></i>';
                        break;
                    case '4':
                        avatarIcon = '<i class="fas fa-user-ninja"></i>';
                        break;
                    default:
                        avatarIcon = '<i class="fas fa-user"></i>';
                }
                userAvatarDisplay.innerHTML = avatarIcon;
                
                // Update subjects based on grade level
                if (gradeLevel.value) {
                    updateSubjectCards(gradeLevel.value);
                } else {
                    // Default to grade 7 if not selected
                    updateSubjectCards('7');
                }
                
                // Apply accessibility options
                if (dyslexiaOption.checked) {
                    document.body.classList.add('dyslexia-friendly');
                }
                
                if (adhOption.checked) {
                    document.body.classList.add('focus-mode');
                }
                
                if (colorBlindOption.checked) {
                    document.body.classList.add('color-blind-friendly');
                }
                
                if (highContrastOption.checked) {
                    document.body.classList.add('high-contrast');
                }
                
                if (slowConnectionOption.checked) {
                    document.body.classList.add('slow-connection');
                    simulateSlowLoading();
                }
                
                // Close modal
                welcomeModal.classList.remove('active');
                
                // Add welcome animation
                userProfileDisplay.classList.add('pulse');
                setTimeout(() => {
                    userProfileDisplay.classList.remove('pulse');
                }, 2000);
            });
            
            // Input event listeners
            userName.addEventListener('input', function() {
                if (this.value.trim() !== '') {
                    this.style.borderColor = '';
                }
            });
            
            userEmail.addEventListener('input', function() {
                if (this.value.trim() !== '') {
                    this.style.borderColor = '';
                }
            });
            
            // Slow connection simulation
            function simulateSlowLoading() {
                const loader = document.querySelector('.loader');
                let width = 0;
                
                const interval = setInterval(function() {
                    if (width >= 100) {
                        width = 0;
                        loader.style.width = width + '%';
                    } else {
                        width += Math.random() * 3;
                        if (width > 100) width = 100;
                        loader.style.width = width + '%';
                    }
                }, 200);
            }
            
            // Chatbot Elements
            const chatbotContainer = document.getElementById('chatbotContainer');
            const chatbotToggle = document.getElementById('chatbotToggle');
            const chatbotWindow = document.getElementById('chatbotWindow');
            const chatbotClose = document.getElementById('chatbotClose');
            const chatbotMessages = document.querySelector('.chatbot-messages');
            const chatbotSuggestions = document.querySelector('.chatbot-suggestions');

            // Chatbot Toggle Functionality
            chatbotToggle.addEventListener('click', () => {
                chatbotWindow.classList.toggle('hidden');
                if (!chatbotWindow.classList.contains('hidden')) {
                    populateSuggestions(); // Populate suggestions when opening
                }
            });

            chatbotClose.addEventListener('click', () => {
                chatbotWindow.classList.add('hidden');
            });

            // Function to add a message to the chat
            function addChatMessage(text, sender) {
                const messageDiv = document.createElement('div');
                messageDiv.classList.add('message', sender === 'bot' ? 'bot-message' : 'user-message');
                messageDiv.textContent = text;
                chatbotMessages.appendChild(messageDiv);
                // Scroll to the bottom
                chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
            }

            // Function to populate suggestions based on current subjects
            function populateSuggestions() {
                chatbotSuggestions.innerHTML = ''; // Clear existing suggestions
                if (window.currentGradeData) { // Check if grade data exists
                    const subjects = Object.keys(window.currentGradeData);
                    subjects.forEach(subject => {
                        const topicData = window.currentGradeData[subject].find(topic => topic.status !== 'Completed'); // Find the first non-completed topic
                        if (topicData) {
                            const suggestionBtn = document.createElement('button');
                            suggestionBtn.classList.add('suggestion-btn');
                            suggestionBtn.textContent = `Tell me about ${subject}: ${topicData.title}`; 
                            suggestionBtn.addEventListener('click', () => {
                                // Simulate user clicking the suggestion
                                addChatMessage(suggestionBtn.textContent, 'user');
                                // Simulate bot response (replace with actual AI logic later)
                                setTimeout(() => {
                                    const botResponse = `Let's explore ${subject}! ${topicData.description}. Would you like to start the lesson?`;
                                    addChatMessage(botResponse, 'bot');
                                    // Optionally add a 'Start Lesson' button here
                                }, 500);
                            });
                            chatbotSuggestions.appendChild(suggestionBtn);
                        }
                    });
                } else {
                    // Default suggestions if no grade data yet
                    const defaultSuggestions = ['What is English?', 'What is Math?', 'How do I earn XP?'];
                    defaultSuggestions.forEach(text => {
                         const suggestionBtn = document.createElement('button');
                            suggestionBtn.classList.add('suggestion-btn');
                            suggestionBtn.textContent = text;
                            suggestionBtn.addEventListener('click', () => {
                                addChatMessage(suggestionBtn.textContent, 'user');
                                // Basic bot response
                                setTimeout(() => {
                                    addChatMessage(`I can help you with that. Let's look into ${text}.`, 'bot');
                                }, 500);
                            });
                            chatbotSuggestions.appendChild(suggestionBtn);
                    });
                }
            }
                 // Text-to-Speech Functionality
    function initTextToSpeech() {
        const synth = window.speechSynthesis;
        
        function speakText(text) {
            const utterance = new SpeechSynthesisUtterance(text);
            synth.speak(utterance);
        }

        // Add to modal continue buttons
        document.querySelectorAll('.continue-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const text = btn.getAttribute('data-speech') || 'Continuing to the next lesson';
                speakText(text);
            });
        });
    }

    // Theme Toggle Logic
    function initThemeToggle() {
        const themeToggle = document.getElementById('themeToggle');
        const savedTheme = localStorage.getItem('pilarTheme') || 'dark';
        
        function applyTheme(theme) {
            document.body.classList.toggle('light-mode', theme === 'light');
            localStorage.setItem('pilarTheme', theme);
        }

        // Initial theme application
        applyTheme(savedTheme);

        themeToggle.addEventListener('click', () => {
            const currentTheme = document.body.classList.contains('light-mode') ? 'dark' : 'light';
            applyTheme(currentTheme);
        });
    }

    // Accessibility Dropdown in Header
  
    
        });
    </script>

    <!-- Chatbot -->
    <div id="chatbotContainer">
        <div id="chatbotWindow" class="hidden">
            <div class="chatbot-header">
                <span>Chat Assistant</span>
                <button id="chatbotClose">&times;</button>
            </div>
            <div class="chatbot-messages">
                <div class="message bot-message">Hello! How can I help you with your learning journey today?</div>
            </div>
            <div class="chatbot-suggestions">
                <!-- Suggestions will be populated here -->
            </div>
        </div>
        <button id="chatbotToggle">
            <i class="fas fa-robot"></i>
        </button>
    </div>
</body>
</html>